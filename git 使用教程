git 使用教程

1.配置git
	git config --global user.name "username"
	git config --global user.email "email"
	--globale 表示当前机器所有仓库使用这个配置
2.创建目录并初始化为一个仓库
	mkdir learngit;
	cd learngit;
	git init
3.创建文件并添加到仓库
	touch README.txt
	git add README.txt
	//添加多个文件 git add file1 file2 ...
4.提交文件到仓库
	git commit -m "add readme.txt file"
5.查看仓库当前状态
	git status
6.查看修改部分
	git diff README.txt
7.提交修改文件到仓库
	git add README.txt
	git status	//查看将要被提交的文件
	git commit -m "modify readme.txt"
版本回退
8.查看历史版本提交记录
	git log [--pretty=oneline]
9.回退到上个版本 (前提:没有推送到远程仓库)
	git reset --hard HEAD^ //HEAD^^上上个版本，HEAD~3上上上个版本
10.前进到某个版本
	git reset --hard commit_id(只需要前8为数字即可)
11.查看历史执行命令记录
	git reflog
工作区和暂存区
工作区：工作目录（learngit）
版本库：.git目录（里面包含暂存区stage和第一个分支master和指向master的指针HEAD）
git add 实际上将文件添加到暂存区，git commit将暂存区的文件提交到当前分支

12. git diff HEAD -- README.txt //查看当前工作空间的文件和指定版本的区别
13.把工作区文件还原到最近一次提交到暂存区或版本库（暂存区优先级高）
	git checkout -- README.txt
14.把提交到暂存区的修改消掉，回放到工作区
	git reset HEAD README.txt
15.删除文件
	git rm README.txt
	git commit -m "delete README.txt file"
远程仓库
1.创建ssh key
	ssh-keygen -t rsa -C "youremail@example.com"
2.把用户目录.ssh/id_rsa.pub内容添加到github账号里
3.在github上创建仓库learngit
4.添加本地仓库到github
	git remote add origin https://github.com/ccst2013/learngit.git
	//git remote add origin git@github.com:ccst2013/learngit.git
	git push -u origin master //推送master分支到远程仓库
	//以后只需要git push origin	master就可以推送了
5.克隆文件到本地
	git clone https://github.com/ccst2013/learngit.git
分支管理
1.创建分支并切换到分支
	git checkout -b dev
	=>git branch dev //创建分支
	=>git checkout dev //切换到分支
	=>git checkout master //切回主分支
2.查看当前分支（*表示当前工作分支）
	git branch
3.合并分支到当前分支
	git merge dev
4.删除分支
	git branch -d dev
	git branch -D dev //强行删除未合并的分支
5.查看分支合并图
	git log --graph --pretty=oneline --abbrev-commit
6.禁用fast forward 合并分支
	git merge --no-ff  -m "note" dev
7.保存当前分支工作区状态(方便切换到其他分支)
	git stash
8.查看保存的状态
	git stash list
9.恢复保存的状态
	git stash pop
远程仓库克隆
1.查看仓库信息
	git remote -v
2.获取远程仓库更新
	git branch --set-upstream dev origin/dev
	git pull
标签管理
1.创建标签
	git tag <name> //当前版本打标签
	git tag <name> commitId //指定commitid版本打标签
2.查看所有标签
	git tag
3.查看标签信息
	git show <tagname>
4.添加标签说明
	git tag -a <tagname> -m "note" [commitId]
5.删除标签
	git tag -d <tagname> //删除本地tag
	git push origin :refs/tags/<tagname> //删除远程指定tag
6.推送标签
	git push origin <tagname> //推送指定标签
	git push origin --tags //推送所有未推送标签
忽略不提交文件
1.在工作区创建一个.gitignore文件
2.把忽略文件名字填进去,such as:
	#Windows
	*.db
	*.ini
	#Python
	*.py[cod]
	*.so
	*.egg
	#目录
	build
	dist
3.提交.gitignore到git
配置命令别名
	git config --global alias.st status
	git config --global alias.unstage `reset HEAD`

